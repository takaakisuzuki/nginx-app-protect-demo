user nginx;
 
worker_processes 1;
load_module modules/ngx_http_app_protect_module.so;
load_module modules/ngx_http_f5_metrics_module.so;
 
error_log /var/log/nginx/error.log debug;
 
events {
    worker_connections  1024;
}
 
http {
    f5_metrics on;
    f5_metrics_server unix:/tmp/avr-socket.sr;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    log_format controller_recommended_log_format '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" "$host" sn="$server_name" rt=$request_time ua="$upstream_addr" us="$upstream_status" ut="$upstream_response_time" ul="$upstream_response_length" cs="$upstream_cache_status" pa="$published_api_name" ';
    access_log /var/log/nginx/access.log controller_recommended_log_format;
 
    map $host $published_api_name {
        default -;
    }
 
    resolver 172.24.0.2 valid=5s;

    upstream cache_backend{
        zone cache_backend 64k;
        least_time header;

        server node01:8888;
        server node02:32769;
        server node03:32768;
  
        #server node01:8888  route=n1 resolve;
        #server node02:32769 route=n2 resolve;
        #server node03:32768 route=n3 resolve;
  
        #sticky cookie srv_id expires=1h domain=www.example.com path=/cache;
    }

    match welcome {
        status 200;
        header Content-Type = text/html;
        body ~ "Docker";
    }
 
    server {
        listen       80;
        server_name  localhost;
        proxy_http_version 1.1;
        index  index.html index.htm;
 
        # NGINX App Protect on
        app_protect_enable off;
        app_protect_security_log_enable on;
        app_protect_security_log "/etc/nginx/log-default.json" syslog:server=elk:5144;
 
        location /cache {
           health_check interval=3 match=welcome;

           sub_filter 'request_uri' '$request_uri';
           sub_filter 'hname' '$host';

           proxy_pass http://cache_backend/;
        }
  
        location / {
            #APP Protect Git config
            root   /usr/share/nginx/html;
            index  index2.html index.htm;
        }
  
        location /application01 {
            root   /usr/share/nginx/html;
            app_protect_policy_file "/etc/nginx/security-policy-application01.json";
            index  index.html index.htm;
        }  

        location /api {
                api write=on;
                allow 0.0.0.0/0;
        }

        location = /dashboard.html {
                root /usr/share/nginx/html;
        }
    }
 
    server {
        server_name 127.0.0.1;
        listen 127.0.0.1:49151;
        access_log off;
        f5_metrics off;
        location /api {
            api;
        }
    }
}
